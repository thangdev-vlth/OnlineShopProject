@model PageResult<ProductViewModel>

<main>
    <div class="container-fluid">
        <h1 class="mt-4">Dashboard</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item active">Dashboard</li>
        </ol>
        <form asp-action="index" asp-controller="Products" method="get" >
            <div class="row container d-inline-flex justify-content-center mb-4 ">
                <input id="id-target" name="id" placeholder="Mã sản phẩm" value=@ViewBag.id class="mr-3 col-6 col-md-3 col-lg-2 ">
                <input id="product-name-target" name="keyword" placeholder="Tên sản phẩm" value=@ViewBag.keyword class="mr-3 col-6 col-md-3 col-lg-2">
                <div class="form-group mb-0 mr-3 col-6 col-md-4 col-lg-3 d-inline-flex justify-content-center">
                    <label for="categoryTarget" style="min-width:100px;padding:6px 12px" class="mb-0">Danh mục</label>
                    <select name="categoryId"  asp-items="@ViewBag.Categories" class="form-control" style="align-items:center">
                        
                    </select>
                </div>
                <div asp-validation-summary="All" class="text-danger"></div>
                <button type="submit" class="btn btn-danger">Lọc</button>
            </div>
        </form>



        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Tên</th>
                    <th scope="col">Đã Bán</th>
                    <th scope="col">Tồn</th>
                    <th scope="col">Lượt Xem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>

                        <td>
                            @Html.ActionLink(item.Name, "Details", new { id = item.Id, role = ViewData["role"] })

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.sold)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ViewCount)
                        </td>

                    </tr>
                }
            </tbody>
        </table>
        <div class="row container d-inline-flex justify-content-end mb-4">
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</main>
